&ACCESS RVP
&REL 4
&PARAM TEMPLATE = C:\KRC\Roboter\Template\vorgabe
&PARAM EDITMASK = *
DEF RSI_AxisCorr( )

;FOLD License
; =============================================
;
; Software License Agreement (BSD License)
;
; Copyright (c) 2014 Norwegian University of Science and Technology
; All rights reserved.
;
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions
; are met:
;
;  * Redistributions of source code must retain the above copyright
;    notice, this list of conditions and the following disclaimer.
;  * Redistributions in binary form must reproduce the above
;    copyright notice, this list of conditions and the following
;    disclaimer in the documentation and/or other materials provided
;    with the distribution.
;  * Neither the name of the Norwegian University of Science and
;    Technology, nor the names of its contributors may be used to
;    endorse or promote products derived from this software without
;    specific prior written permission.
;
; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
; "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
; BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
; CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
; ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
; POSSIBILITY OF SUCH DAMAGE.
;
; =============================================

; =============================================
;
; ROS INDUSTRIAL: KUKA RSI HW INTERFACE
; Realtime UDP data exchange with
; kuka_rsi_hw_interface
;
; =============================================
;ENDFOLD

; Declaration of KRL variables
DECL INT ret	; Return value for RSI commands
DECL INT CONTID	; ContainerID

;FOLD INI
  ;FOLD BASISTECH INI
    GLOBAL INTERRUPT DECL 3 WHEN $STOPMESS==TRUE DO IR_STOPM ( )
    INTERRUPT ON 3
    BAS (#INITMOV,0 )
  ;ENDFOLD (BASISTECH INI)
  ;FOLD USER INI
    ;Make your modifications here
    INTERRUPT DECL 10 WHEN $FLAG[1]==TRUE DO RSI_REINIT()
    INTERRUPT ON 10
  ;ENDFOLD (USER INI)
;ENDFOLD (INI)

; Fake SAK
PTP $POS_ACT

RSI_REINIT()

;LOOP
  ; Activate Sensor guided movement
  RSI_MOVECORR()
;FOLD OUT 1 '' State=TRUE CONT;%{PE}%R 8.2.24,%MKUKATPBASIS,%COUT,%VOUTX,%P 2:1, 3:, 5:TRUE, 6:CONTINUE
CONTINUE
$OUT[1]=TRUE
;ENDFOLD
;ENDLOOP

; Turn off RSI
ret = RSI_OFF()
IF (ret <> RSIOK) THEN
  HALT
ENDIF

END

DEF RSI_REINIT()
;FOLD Declaration
DECL INT RSI_RET ; Return value for RSI commands
DECL INT CONTID ; ContainerID
;ENDFOLD
;FOLD Close RSI Connection
RSI_RET = RSI_OFF()
IF (RSI_RET <> RSIOK) THEN
  HALT
ENDIF
;ENDFOLD
;FOLD RSI Init
; RSI Module must run before continue
; Create RSI Context
RSI_RET = RSI_CREATE("ros_rsi",CONTID,TRUE)
IF (RSI_RET <> RSIOK) THEN
	SWITCH RSI_RET
		 Case RSIFILENOTFOUND
			HALT
	   Case RSIINVFILE
			HALT
		 Case RSINOMEMORY
			HALT
	;  Case RSIINVOBJTYPE
	 ;    HALT
	   Case RSIEXTLIBNOTFOUND
			HALT
	   Case RSINOTLINKED
			HALT
	   Case RSILNKCIRCLE
			HALT
	   DEFAULT
			HALT
	ENDSWITCH
ENDIF

; Start RSI execution
  ; Start RSI modulev
  ; for relative movements use #RELATIVE
  ; for absolute movements use #ABSOLUTE
  ; #IPO=12ms, #IPO_FAST=4ms
  RSI_RET = RSI_ON(#RELATIVE,#IPO_FAST)
  ; RSI_RET = RSI_ON(#RELATIVE,#IPO,#TCP)
  IF (RSI_RET <> RSIOK) THEN
    ; RSI was already on! Press to continue!
    HALT
  ENDIF
  ;RESUME
;ENDFOLD
END